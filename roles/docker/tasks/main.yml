---
- name: ensure kernal is newer than 3.11 (Docker requirement)
  fail:
    msg="Kernel is too old to run docker. Update kernel"
  when: kernel | version_compare('3.11', '<')

- name: ensure system is running ubuntu
  fail:
    msg="role only supports ubuntu"
  when: ansible_distribution != "Ubuntu"

- name: Install dependencies
  apt: name={{item}} state=present update_cache=yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - linux-image-extra-virtual
    - "linux-image-extra-{{ansible_kernel}}"
    - software-properties-common
    - curl

- name: Add docker GPG key
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Create docker.list file
  copy:
    dest=/etc/apt/sources.list.d/docker.list
    content='deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable'

- name: Install docker
  apt: name=docker-ce state=present update_cache=yes

- name: Set iptables to false
  lineinfile:
    dest=/etc/default/docker
    line='DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4 --iptables=false"'
    state=present
  when: docker_iptables != false

- name: Start docker service
  service: name=docker state=started

- name: Install pip
  apt: name=python-pip state=present update_cache=yes
  when: install_docker_compose != false

- name: Install docker-compose
  pip: name=docker-compose
  when: install_docker_compose != false
